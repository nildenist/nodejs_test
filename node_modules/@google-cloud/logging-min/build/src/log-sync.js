"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LogSync=void 0;const entry_1=require("./entry");const instrumentation_1=require("./utils/instrumentation");const log_common_1=require("./utils/log-common");class LogSync{constructor(logging,name,transport,options){var _a;options=options||{};this.formattedName_=(0,log_common_1.formatLogName)(logging.projectId,name);this.logging=logging;this.name=this.formattedName_.split("/").pop();this.transport=transport||process.stdout;this.useMessageField_=(_a=options.useMessageField)!==null&&_a!==void 0?_a:true}alert(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"ALERT"),options)}critical(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"CRITICAL"),options)}debug(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"DEBUG"),options)}emergency(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"EMERGENCY"),options)}entry(metadataOrData,data){let metadata;if(!data&&metadataOrData!==null&&Object.prototype.hasOwnProperty.call(metadataOrData,"httpRequest")){metadata=metadataOrData;data={}}else if(!data){data=metadataOrData;metadata={}}else{metadata=metadataOrData}return this.logging.entry(metadata,data)}error(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"ERROR"),options)}info(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"INFO"),options)}notice(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"NOTICE"),options)}warning(entry,options){this.write((0,log_common_1.assignSeverityToEntries)(entry,"WARNING"),options)}write(entry,opts){var _a;const options=opts?opts:{};let structuredEntries;this.formattedName_=(0,log_common_1.formatLogName)(this.logging.projectId,this.name);try{structuredEntries=(0,instrumentation_1.populateInstrumentationInfo)(entry)[0].map(entry=>{if(!(entry instanceof entry_1.Entry)){entry=this.entry(entry)}return entry.toStructuredJSON(this.logging.projectId,this.useMessageField_)});for(const entry of structuredEntries){entry.logName=this.formattedName_;entry.resource=(0,log_common_1.snakecaseKeys)((_a=options.resource)===null||_a===void 0?void 0:_a.labels)||entry.resource||this.logging.detectedResource;entry[entry_1.LABELS_KEY]=options.labels||entry[entry_1.LABELS_KEY];this.transport.write(JSON.stringify(entry)+"\n")}}catch(err){}}}exports.LogSync=LogSync;
//# sourceMappingURL=log-sync.js.map