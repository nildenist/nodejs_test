"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Sink=void 0;const promisify_1=require("@google-cloud/promisify");const extend=require("extend");class Sink{constructor(logging,name){this.logging=logging;this.name=name;this.formattedName_="projects/"+logging.projectId+"/sinks/"+name}create(config){return this.logging.createSink(this.name,config)}async delete(gaxOptions){const projectId=await this.logging.auth.getProjectId();this.formattedName_="projects/"+projectId+"/sinks/"+this.name;const reqOpts={sinkName:this.formattedName_};return this.logging.configService.deleteSink(reqOpts,gaxOptions)}async getMetadata(gaxOptions){const projectId=await this.logging.auth.getProjectId();this.formattedName_="projects/"+projectId+"/sinks/"+this.name;const reqOpts={sinkName:this.formattedName_};[this.metadata]=await this.logging.configService.getSink(reqOpts,gaxOptions);return[this.metadata]}setFilter(filter){return this.setMetadata({filter:filter})}async setMetadata(metadata){const[currentMetadata]=await this.getMetadata();const uniqueWriterIdentity=metadata.uniqueWriterIdentity;delete metadata.uniqueWriterIdentity;let reqOpts={sinkName:this.formattedName_,sink:extend({},currentMetadata,metadata)};delete reqOpts.sink.gaxOptions;reqOpts={...reqOpts,...uniqueWriterIdentity&&{uniqueWriterIdentity:uniqueWriterIdentity}};[this.metadata]=await this.logging.configService.updateSink(reqOpts,metadata.gaxOptions);return[this.metadata]}}exports.Sink=Sink;(0,promisify_1.callbackifyAll)(Sink);
//# sourceMappingURL=sink.js.map