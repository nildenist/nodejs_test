"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.setInstrumentationStatus=exports.getNodejsLibraryVersion=exports.createDiagnosticEntry=exports.populateInstrumentationInfo=exports.MAX_INSTRUMENTATION_COUNT=exports.NODEJS_DEFAULT_LIBRARY_VERSION=exports.NODEJS_LIBRARY_NAME_PREFIX=exports.INSTRUMENTATION_SOURCE_KEY=exports.DIAGNOSTIC_INFO_KEY=void 0;const arrify=require("arrify");const entry_1=require("../entry");global.instrumentationAdded=false;global.shouldSkipInstrumentationCheck=false;const maxDiagnosticValueLen=14;exports.DIAGNOSTIC_INFO_KEY="logging.googleapis.com/diagnostic";exports.INSTRUMENTATION_SOURCE_KEY="instrumentation_source";exports.NODEJS_LIBRARY_NAME_PREFIX="nodejs";exports.NODEJS_DEFAULT_LIBRARY_VERSION="10.4.0";exports.MAX_INSTRUMENTATION_COUNT=3;function populateInstrumentationInfo(entry){var _a,_b;if(global.shouldSkipInstrumentationCheck){return[arrify(entry),false]}let isWritten=setInstrumentationStatus(true);let isInfoAdded=false;const entries=[];if(entry){for(const entryItem of arrify(entry)){if(entryItem){const info=(_b=(_a=entryItem.data)===null||_a===void 0?void 0:_a[exports.DIAGNOSTIC_INFO_KEY])===null||_b===void 0?void 0:_b[exports.INSTRUMENTATION_SOURCE_KEY];if(info){entryItem.data[exports.DIAGNOSTIC_INFO_KEY][exports.INSTRUMENTATION_SOURCE_KEY]=validateAndUpdateInstrumentation(info);global.shouldSkipInstrumentationCheck=isInfoAdded=isWritten=true}entries.push(entryItem)}}}if(!isWritten){entries.push(createDiagnosticEntry(undefined,undefined));global.shouldSkipInstrumentationCheck=isInfoAdded=true}return[entries,isInfoAdded]}exports.populateInstrumentationInfo=populateInstrumentationInfo;function createDiagnosticEntry(libraryName,libraryVersion){if(!libraryName||!libraryName.startsWith(exports.NODEJS_LIBRARY_NAME_PREFIX)){libraryName=exports.NODEJS_LIBRARY_NAME_PREFIX}const entry=new entry_1.Entry(undefined,{[exports.DIAGNOSTIC_INFO_KEY]:{[exports.INSTRUMENTATION_SOURCE_KEY]:[{name:truncateValue(libraryName,maxDiagnosticValueLen),version:truncateValue(libraryVersion!==null&&libraryVersion!==void 0?libraryVersion:getNodejsLibraryVersion(),maxDiagnosticValueLen)}]}});return entry}exports.createDiagnosticEntry=createDiagnosticEntry;function validateAndUpdateInstrumentation(infoList){const finalInfo=[];let count=1;for(const info of infoList){if(isValidInfo(info)){finalInfo.push({name:truncateValue(info.name,maxDiagnosticValueLen),version:truncateValue(info.version,maxDiagnosticValueLen)});if(++count===exports.MAX_INSTRUMENTATION_COUNT)break}}finalInfo.push({name:exports.NODEJS_LIBRARY_NAME_PREFIX,version:getNodejsLibraryVersion()});return finalInfo}function truncateValue(value,maxLen){if(typeof value!=="string"){try{if(Object.prototype.hasOwnProperty.call(value,"version")){value=value.version}}catch(err){}}if(typeof value!=="string"){return exports.NODEJS_DEFAULT_LIBRARY_VERSION}if(value&&value.length>maxLen){return value.substring(0,maxLen).concat("*")}return value}function getNodejsLibraryVersion(){return exports.NODEJS_DEFAULT_LIBRARY_VERSION}exports.getNodejsLibraryVersion=getNodejsLibraryVersion;function isValidInfo(info){if(!info||!info.name||!info.version||!info.name.startsWith(exports.NODEJS_LIBRARY_NAME_PREFIX)){return false}return true}function setInstrumentationStatus(value){const status=global.instrumentationAdded;global.instrumentationAdded=value;return status}exports.setInstrumentationStatus=setInstrumentationStatus;
//# sourceMappingURL=instrumentation.js.map