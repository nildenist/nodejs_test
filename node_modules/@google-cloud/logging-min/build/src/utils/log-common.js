"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.formatLogName=exports.assignSeverityToEntries=exports.snakecaseKeys=exports.Severity=void 0;const entry_1=require("../entry");const extend=require("extend");const arrify=require("arrify");var Severity;(function(Severity){Severity[Severity["emergency"]=0]="emergency";Severity[Severity["alert"]=1]="alert";Severity[Severity["critical"]=2]="critical";Severity[Severity["error"]=3]="error";Severity[Severity["warning"]=4]="warning";Severity[Severity["notice"]=5]="notice";Severity[Severity["info"]=6]="info";Severity[Severity["debug"]=7]="debug"})(Severity=exports.Severity||(exports.Severity={}));function snakecaseKeys(labels){for(const key in labels){const replaced=key.replace(/[A-Z]/g,letter=>`_${letter.toLowerCase()}`);Object.defineProperty(labels,replaced,Object.getOwnPropertyDescriptor(labels,key));if(replaced!==key){delete labels[key]}}return labels}exports.snakecaseKeys=snakecaseKeys;function assignSeverityToEntries(entries,severity){return arrify(entries).map(entry=>{const metadata=extend(true,{},entry.metadata,{severity:severity});return extend(new entry_1.Entry,entry,{metadata:metadata})})}exports.assignSeverityToEntries=assignSeverityToEntries;function formatLogName(projectId,name){const path="projects/"+projectId+"/logs/";name=name.replace(path,"");if(decodeURIComponent(name)===name){name=encodeURIComponent(name)}return path+name}exports.formatLogName=formatLogName;
//# sourceMappingURL=log-common.js.map